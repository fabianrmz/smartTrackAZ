function toXLXS() {
    var wb = XLSX.utils.book_new();
    wb.Props = {
        Title: "Datasheet 31/10/19",
        Subject: "Data retrieved from Firebase's Firestore",
        Author: "Autogenerated",
        CreatedDate: new Date(2019,10,31)
    }
    var couponsRef = db.collection("coupons");
    var feedbacksRef = db.collection("feedbacks");
    var locationRef = db.collection("locations");
    var medicinesRef = db.collection("medicines");
    var pacientFeedbacksRef = db.collection("pacientFeedbacks");
    var rewardsRef = db.collection("rewards");
    var usersRef = db.collection("users");
    var final;

    //coupons data
    /*var coupRew; var coupDD;
    couponsRef.get().then(function (querySnapshot) {
        querySnapshot.forEach(function (doc) {
            coupRew.push(doc.data().descriptionReward);
            coupDD.push(doc.data().duwDate);
        }).then(function () {
            final.push(coupRew);
            final.push(coupDD);
        })
    });*/
    
    //feedbacks data
    var fbLoc; var fbBat; var fbDate; var fbAss; var fbUid; var fbValid;
    feedbacksRef.get().then(function (querySnapshot) {
        querySnapshot.forEach(function (doc) {
            fbLoc.push(doc.data().locationId);
            fbBat.push(doc.data().lote);
            fbDate.push(doc.data().registerDate);
            fbAss.push(doc.data().totalAssets);
            fbUid.push(doc.data().userID);
            fbValid.push(doc.data().valid);
        }).then(function() {
            final.push(fbBat);
            final.push(fbLoc);
            final.push(fbDate);
            final.push(fbAss);
            final.push(fbUid);
            final.push(fbValid);
        })
    });

    //locations data
    /*var lAdd; var lNam; var lRef;
    locationRef.get().then(function (querySnapshot) {
        querySnapshot.forEach(function (doc) {
            lAdd.push(doc.data().address);
            lNam.push(doc.data().locationName);
            lRef.push(doc.data().ref);
        }).then(function() {
            final.push(lAdd);
            final.push(lNam);
            final.push(lRef);
        })
    });

    //medicines data
    var mDesc; var mImg; var mName; var mRef; var mType;
    medicinesRef.get().then(function (querySnapshot) {
        querySnapshot.forEach(function (doc) {
            mDesc.push(doc.data().description);
            mImg.push(doc.data().image);
            mName.push(doc.data().name);
            mRef.push(doc.data().ref);
            mType.push(doc.data().type);
        }).then(function() {
            final.push(mDesc);
            final.push(mImg);
            final.push(mName);
            final.push(mName);
        })
    });*/
    var ws = XLSX.utils.aoa_to_sheet(final);
    wb.Sheets["Feedback Info"] = ws;
    var wbout = XLSX.write(wb, {bookType:'xlsx',  type: 'binary'});
    saveAs(new Blob([s2ab(wbout)],{type:"application/octet-stream"}), 'test.xlsx');
}

function s2ab(s) { 
    var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer
    var view = new Uint8Array(buf);  //create uint8array as viewer
    for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF; //convert to octet
    return buf;    
}